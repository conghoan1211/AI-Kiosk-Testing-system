@startuml

title View Exam Monitor Sequence Diagram

actor "User" as Client
boundary "c:MonitoringController" as Controller
control "s:MonitoringService" as Service
database "Database" as DB

== View Exam Monitor ==

Client -> Controller: GET /exam-overview (MonitorExamSearchVM)
activate Controller

alt User not authenticated
    Controller -> Controller: Log unauthorized access attempt
    Controller --> Client: 401 Unauthorized { success: false, message: "User not authenticated." }
    deactivate Controller
else User authenticated
    Controller -> Service: GetExamOverview(search, usertoken)
    activate Service

    Service -> DB: Check user is admin (UserId, RoleId=Admin)
    activate DB
    DB --> Service: isAdmin result
    deactivate DB

    Service -> DB: Get permitted ExamIds (ExamSupervisors)
    activate DB
    alt No permitted exams
        DB --> Service: Not found
        deactivate DB
        Service -> Service: Log authorization failure
        Service --> Controller: ("You do not have the right to supervise any exams.", null)
        deactivate Service
        Controller --> Client: 403 Forbidden { success: false, message }
        deactivate Controller
    else Has permitted exams
        DB --> Service: List<ExamId>
        deactivate DB

        Service -> DB: Query Exams (ExamId in permitted, include Creator, Room, Class, Subject)
        activate DB
        DB --> Service: IQueryable<Exam>
        deactivate DB

        Service -> Service: Apply filters (SubjectId, ExamStatus, TextSearch)
        Service -> Service: Count total, calculate totalPage
        Service -> DB: Get paged Exams
        activate DB
        DB --> Service: List<Exam>
        deactivate DB

        Service -> DB: Query StudentExams (ExamId in page)
        activate DB
        DB --> Service: List<StudentExam>
        deactivate DB

        Service -> Service: Summary result (MonitorExamsVM)
        Service -> Service: Wrap in SearchResult (Result, TotalPage, PageSize, CurrentPage, Total)
        Service --> Controller: ("", SearchResult)
        deactivate Service
        Controller --> Client: 200 OK { success: true, message, data }
        deactivate Controller
    end alt
end alt

@enduml 