@startuml

title View Webcam Recording Sequence Diagram

actor "User" as Client
boundary "c:FaceCaptureController" as Controller
control "s:FaceCaptureService" as Service
database "Database" as DB

== View Webcam Recording ==

Client -> Controller: GET /get-list (FaceCaptureSearchVM)
activate Controller

alt User not authenticated
    Controller -> Controller: Log unauthorized access attempt
    Controller --> Client: 401 Unauthorized { message: "User not authenticated." }
    deactivate Controller
else User authenticated
    Controller -> Service: GetList(input)
    activate Service

    Service -> DB: Check user role and permissions (UserId, RoleId)
    activate DB
    alt User is not allowed
        DB --> Service: Not found or invalid role
        deactivate DB
        Service -> Service: Log authorization failure
        Service --> Controller: ("You do not have permission to view webcam recordings.", null)
        deactivate Service
        Controller --> Client: 403 Forbidden { success: false, message }
        deactivate Controller
    else User is allowed
        DB --> Service: User role confirmed
        deactivate DB

        Service -> DB: Get StudentExam (StudentExamId, ExamId, include User)
        activate DB
        alt StudentExam not found
            DB --> Service: Not found
            deactivate DB
            Service --> Controller: ("Student exam not found.", null)
            deactivate Service
            Controller --> Client: 400 BadRequest { success: false, message }
            deactivate Controller
        else StudentExam found
            DB --> Service: StudentExam
            deactivate DB

            Service -> DB: Query FaceCaptures (StudentExamId)
            activate DB
            DB --> Service: IQueryable<FaceCapture>
            deactivate DB

            Service -> Service: Apply filters (LogType)
            Service -> Service: Count total, calculate totalPage
            Service -> DB: Get paged CaptureImages
            activate DB
            DB --> Service: List<CaptureImages>
            deactivate DB

            alt No captures found
                Service --> Controller: ("No captures found for this student exam.", null)
                deactivate Service
                Controller --> Client: 400 BadRequest { success: false, message }
                deactivate Controller
            else Captures found
                Service -> Service: Wrap in FaceCaptureVM & SearchResult
                Service --> Controller: ("", SearchResult)
                deactivate Service
                Controller --> Client: 200 OK { success: true, message, data }
                deactivate Controller
            end alt
        end alt
    end alt
end alt

@enduml 