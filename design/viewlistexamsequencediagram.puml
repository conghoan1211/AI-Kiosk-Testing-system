@startuml

title View List Exam Sequence Diagram

actor "User" as Client
boundary "c:ExamController" as Controller
control "s:ExamService" as Service
database "Database" as DB

== View List Exam ==

Client -> Controller: GET /list (ExamListRequest)
activate Controller

alt Request is null
    Controller --> Client: 400 BadRequest { message: "Invalid request body." }
    deactivate Controller
else User not authenticated
    Controller -> Controller: Log unauthorized access attempt
    Controller --> Client: 401 Unauthorized { message: "User not authenticated." }
    deactivate Controller
else Valid request & authenticated
    Controller -> Service: GetExamListAsync(request, userId)
    activate Service

    Service -> DB: Check user is lecturer or admin (UserId, RoleId)
    activate DB
    alt User is not allowed
        DB --> Service: Not found
        deactivate DB
        Service -> Service: Log authorization failure
        Service --> Controller: (false, "User does not a lecture to have permission to view list exams.", null)
        deactivate Service
        Controller --> Client: 403 Forbidden { message }
        deactivate Controller
    else User is allowed
        DB --> Service: Found
        deactivate DB

        Service -> DB: Query Exams (include Room, Creator)
        activate DB
        DB --> Service: IQueryable<Exam>
        deactivate DB

        Service -> Service: Apply filters (TextSearch, Status, IsMyQuestion)
        Service -> Service: Count total, calculate totalPage
        Service -> DB: Get paged ExamListVMs
        activate DB
        DB --> Service: List<ExamListVM>
        deactivate DB

        Service -> Service: Wrap in SearchResult
        Service --> Controller: (true, "Success", SearchResult)
        deactivate Service
        Controller --> Client: 200 OK { message, data }
        deactivate Controller
    end alt
end alt

@enduml 