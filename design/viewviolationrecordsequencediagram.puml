@startuml

title View Violation Record Sequence Diagram

actor "User" as Client
boundary "c:StudentViolationController" as Controller
control "s:StudentViolationService" as Service
database "Database" as DB

== View Violation Record ==

Client -> Controller: GET /get-list (SearchStudentViolation)
activate Controller

alt User not authenticated
    Controller -> Controller: Log unauthorized access attempt
    Controller --> Client: 401 Unauthorized { success: false, message: "User not authenticated." }
    deactivate Controller
else User authenticated
    Controller -> Service: GetAll(search)
    activate Service

    Service -> DB: Check user role and permissions (UserId, RoleId)
    activate DB
    alt User is not allowed
        DB --> Service: Not found or invalid role
        deactivate DB
        Service -> Service: Log authorization failure
        Service --> Controller: "You do not have permission to view student violations."
        deactivate Service
        Controller --> Client: 403 Forbidden { success: false, message }
        deactivate Controller
    else User is allowed
        DB --> Service: User role confirmed
        deactivate DB

        alt StudentExamId is empty
            Service --> Controller: ("StudentExamId is required.", null)
            deactivate Service
            Controller --> Client: 404 NotFound { success: false, message }
            deactivate Controller
        else StudentExamId provided
            Service -> DB: Query StudentViolations (StudentExamId, include StudentExam, User)
            activate DB
            Service -> Service: Apply filters (TextSearch)
            Service -> Service: Count total, calculate totalPage
            Service -> DB: Get paged StudentViolationVMs
            activate DB
            DB --> Service: List<StudentViolationVM>
            deactivate DB
            alt No student violations found
                Service --> Controller: ("No student violations found.", null)
                deactivate Service
                Controller --> Client: 404 NotFound { success: false, message }
                deactivate Controller
            else Violations found
                Service -> Service: Wrap in SearchResult (Result, TotalPage, PageSize, CurrentPage, Total)
                Service --> Controller: ("", SearchResult)
                deactivate Service
                Controller --> Client: 200 OK { success: true, message, data }
                deactivate Controller
            end alt
        end alt
    end alt
end alt

@enduml 