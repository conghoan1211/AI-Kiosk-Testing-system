@startuml
' Class Diagram for View Detail Live Exam Feature

title View Detail Live Exam Class Diagram

hide empty members
skinparam packageStyle rectangle
skinparam linetype ortho
skinparam defaultFontSize 14
skinparam defaultFontName Arial
skinparam classFontSize 12
skinparam classFontName Arial
skinparam noteFontSize 11
skinparam noteFontName Arial

' Increase spacing and sizing
skinparam class {
    BackgroundColor LightBlue
    BorderColor DarkBlue
    ArrowColor DarkBlue
    FontSize 12
}

skinparam package {
    BackgroundColor LightYellow
    BorderColor DarkOrange
    FontSize 14
    FontStyle bold
}

skinparam interface {
    BackgroundColor LightGreen
    BorderColor DarkGreen
    FontSize 12
}

skinparam enum {
    BackgroundColor LightCyan
    BorderColor DarkCyan
    FontSize 12
}

package "Controllers" {
    class StudentExamController <<Controller>> {
        - _iService: IStudentExamService
        + GetExamDetail(examId: string): Task<IActionResult>
    }
}

package "Services" {
    interface IStudentExamService <<Interface>> {
        + GetExamDetail(examId: string, usertoken: string): Task<(string, ExamDetailVM?)>
    }
    class StudentExamService <<Service>> {
        - _context: DbContext
        + GetExamDetail(examId: string, usertoken: string): Task<(string, ExamDetailVM?)>
    }
}

package "Models" {
    class ExamDetailVM <<DTO>> {
        + ExamId: string
        + Title: string
        + StartTime: DateTime
        + EndTime: DateTime
        + Duration: int
        + Status: int
        + Room: RoomVM
    }
    class RoomVM <<DTO>> {
        + RoomId: string
        + RoomName: string
    }
}

package "Entities" {
    class Exam {
        + ExamId: string
        + Title: string
        + StartTime: DateTime
        + EndTime: DateTime
        + Duration: int
        + Status: int
        + Room: Room
    }
    class Room {
        + RoomId: string
        + RoomName: string
    }
}

' Relationships
StudentExamController ..> IStudentExamService : <<uses>>
IStudentExamService <|.. StudentExamService
StudentExamController ..> ExamDetailVM : <<uses>>
StudentExamService ..> Exam : <<uses>>
StudentExamService ..> ExamDetailVM : <<maps to>>
Exam o-- Room : <<has>>
ExamDetailVM o-- RoomVM : <<has>>
Room --> RoomVM : <<maps to>>

@enduml 