@startuml

title Add User To Room Sequence Diagram

actor "User" as Client
boundary "c:RoomUserController" as Controller
control "s:RoomUserService" as Service
database "Database" as DB
control "LogService" as Log

== Add User To Room ==

Client -> Controller: POST /AddUserToRoom (roomId, userIdsOrCodes)
activate Controller

alt User not authenticated
    Controller -> Controller: Log unauthorized access attempt
    Controller --> Client: 401 Unauthorized { success: false, message: "User not authenticated." }
    deactivate Controller
else User authenticated
    Controller -> Service: AddStudentsToRoom(roomId, userIdsOrCodes, usertoken)
    activate Service

    Service -> DB: Check user role and permissions (UserId, RoleId)
    activate DB
    alt User is not allowed
        DB --> Service: Not found or invalid role
        deactivate DB
        Service -> Service: Log authorization failure
        Service --> Controller: ("You do not have permission to add users to room.", [], [], [])
        deactivate Service
        Controller --> Client: 403 Forbidden { success: false, message }
        deactivate Controller
    else User is allowed
        DB --> Service: User role confirmed
        deactivate DB

        Service -> Service: Validate input (roomId, userIdsOrCodes)
        alt Invalid input
            Service --> Controller: ("Room ID and User Codes/IDs cannot be null or empty.", [], [], [])
            deactivate Service
            Controller --> Client: 400 BadRequest { success: false, message }
            deactivate Controller
        else Valid input
            Service -> DB: Check room exists (roomId)
            activate DB
            alt Room not found
                DB --> Service: Not found
                deactivate DB
                Service --> Controller: ("Room not found.", [], [], [])
                deactivate Service
                Controller --> Client: 400 BadRequest { success: false, message }
                deactivate Controller
            else Room found
                DB --> Service: Found
                deactivate DB
                Service -> DB: Get Users (UserId or UserCode in input)
                activate DB
                DB --> Service: List<User>
                deactivate DB
                Service -> Service: Map input to UserId
                Service -> DB: Get duplicated RoomUsers
                activate DB
                DB --> Service: List<RoomUser>
                deactivate DB
                Service -> Service: Determine invalidInputs, duplicatedInputs, addedInputs
                alt No new users to add
                    Service --> Controller: ("No new users to add.", addedInputs, invalidInputs, duplicatedInputs)
                    deactivate Service
                    Controller --> Client: 400 BadRequest { success: false, message, data }
                    deactivate Controller
                else Add new users
                    Service -> DB: Add new RoomUsers
                    activate DB
                    DB --> Service: Added
                    deactivate DB
                    Service -> DB: SaveChanges
                    activate DB
                    DB --> Service: Saved
                    deactivate DB
                    Service -> Log: WriteActivity(AddUserLogVM)
                    activate Log
                    Log --> Service: msg
                    deactivate Log
                    alt Log error
                        Service --> Controller: (msg, addedInputs, invalidInputs, duplicatedInputs)
                        deactivate Service
                        Controller --> Client: 400 BadRequest { success: false, message, data }
                        deactivate Controller
                    else Log success
                        Service --> Controller: ("", addedInputs, invalidInputs, duplicatedInputs)
                        deactivate Service
                        Controller --> Client: 200 OK { success: true, message, data }
                        deactivate Controller
                    end alt
                end alt
            end alt
        end alt
    end alt
end alt

@enduml 