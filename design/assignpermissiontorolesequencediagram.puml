@startuml

title Assign Permission to Role Sequence Diagram

actor "User" as Client
boundary "c:AuthorizeController" as Controller
control "s:AuthorizeService" as Service
database "Database" as DB
control "CacheService" as Cache
control "LogService" as Log

== Assign Permission to Role ==

Client -> Controller: POST /add-permissions-to-role (AddPermissionToRoleVM)
activate Controller

alt User not authenticated
    Controller -> Controller: Log unauthorized access attempt
    Controller --> Client: 401 Unauthorized { success: false, message: "User not authenticated." }
    deactivate Controller
else User authenticated
    Controller -> Service: AddPermissionsToRole(rolePermission, usertoken)
    activate Service

    Service -> Service: Validate input (RoleId, Permissions)
    alt Invalid input
        Service --> Controller: "Role ID must be greater than 0 and Permission ID cannot be empty."
        deactivate Service
        Controller --> Client: 400 BadRequest { success: false, message }
        deactivate Controller
    else Valid input
        Service -> DB: Get Role (RoleId)
        activate DB
        alt Role not found
            DB --> Service: Not found
            deactivate DB
            Service --> Controller: "Role not found."
            deactivate Service
            Controller --> Client: 400 BadRequest { success: false, message }
            deactivate Controller
        else Role found
            DB --> Service: Role
            deactivate DB
            Service -> DB: Get current RolePermissions (RoleId)
            activate DB
            DB --> Service: List<RolePermission>
            deactivate DB
            Service -> Service: Calculate permissions to add/remove
            alt No changes needed
                Service -> Cache: ClearCache
                activate Cache
                Cache --> Service: Cleared
                deactivate Cache
                Service -> Log: WriteActivity(AddUserLogVM)
                activate Log
                Log --> Service: ""
                deactivate Log
                Service --> Controller: ""
                deactivate Service
                Controller --> Client: 200 OK { success: true, message }
                deactivate Controller
            else Update permissions
                Service -> DB: Add new RolePermissions
                activate DB
                DB --> Service: Added
                deactivate DB
                Service -> DB: Remove RolePermissions
                activate DB
                DB --> Service: Removed
                deactivate DB
                Service -> DB: SaveChanges
                activate DB
                DB --> Service: Saved
                deactivate DB
                Service -> Cache: ClearCache
                activate Cache
                Cache --> Service: Cleared
                deactivate Cache
                Service -> Log: WriteActivity(AddUserLogVM)
                activate Log
                Log --> Service: ""
                deactivate Log
                Service --> Controller: ""
                deactivate Service
                Controller --> Client: 200 OK { success: true, message }
                deactivate Controller
            end alt
        end alt
    end alt
end alt

@enduml 