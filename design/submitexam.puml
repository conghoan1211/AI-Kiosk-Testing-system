@startuml
' Class Diagram for SubmitExam Feature

title SubmitExam Class Diagram

hide empty members
skinparam packageStyle rectangle
skinparam linetype ortho
skinparam defaultFontSize 14
skinparam defaultFontName Arial
skinparam classFontSize 12
skinparam classFontName Arial
skinparam noteFontSize 11
skinparam noteFontName Arial

skinparam class {
    BackgroundColor LightBlue
    BorderColor DarkBlue
    ArrowColor DarkBlue
    FontSize 12
}

skinparam package {
    BackgroundColor LightYellow
    BorderColor DarkOrange
    FontSize 14
    FontStyle bold
}

skinparam interface {
    BackgroundColor LightGreen
    BorderColor DarkGreen
    FontSize 12
}

' Controllers
package "Controllers" {
    class StudentExamController <<Controller>> {
        - _iService: IStudentExamService
        + StudentExamController(iService: IStudentExamService)
        + SubmitExam(request: SubmitExamRequest): Task<IActionResult>
    }
}

' Services
package "Services" {
    interface IStudentExamService <<Interface>> {
        + SubmitExam(request: SubmitExamRequest, usertoken: string, context: HttpContext): Task<string>
    }
    class StudentExamService <<Service>> {
        - _context: DbContext
        + SubmitExam(request: SubmitExamRequest, usertoken: string, context: HttpContext): Task<string>
    }
}

' DTOs & Models
package "Models & DTOs" {
    class SubmitExamRequest <<DTO>> {
        + StudentExamId: string
        + ExamId: string
        + Answers: List<StudentAnswerVM>
    }
    class StudentAnswerVM <<DTO>> {
        + QuestionId: string
        + UserAnswer: string
    }
}

' Entities
package "Entities" {
    class StudentExam {
        + StudentExamId: string
        + ExamId: string
        + StudentId: string
        + Status: int
        + Score: decimal
        + SubmitTime: DateTime
        + UpdatedAt: DateTime
        + IpAddress: string
        + BrowserInfo: string
        + Exam: Exam
    }
    class StudentAnswer {
        + StudentAnswerId: string
        + StudentExamId: string
        + QuestionId: string
        + UserAnswer: string
        + IsCorrect: bool
        + PointsEarned: decimal
        + CreatedAt: DateTime
        + UpdatedAt: DateTime
    }
    class Question {
        + QuestionId: string
        + CorrectAnswer: string
        + Point: decimal
    }
    class Exam {
        + ExamId: string
        + Title: string
        + ExamType: int
        + Guidelines: string
        + StartTime: DateTime
        + EndTime: DateTime
    }
}

' Relationships
StudentExamController ..> IStudentExamService : <<uses>>
StudentExamController ..> SubmitExamRequest : <<uses>>
IStudentExamService <|.. StudentExamService
StudentExamService ..> SubmitExamRequest : <<uses>>
StudentExamService ..> StudentExam : <<uses>>
StudentExamService ..> StudentAnswer : <<uses>>
StudentExamService ..> Question : <<uses>>
StudentExamService ..> Exam : <<uses>>
SubmitExamRequest "1" *-- "*" StudentAnswerVM : contains
StudentExam ..> Exam : <<has>>
StudentAnswer ..> Question : <<for>>

@enduml 