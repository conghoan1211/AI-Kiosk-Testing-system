@startuml

title Re-Assign Exam Sequence Diagram

actor "User" as Client
boundary "c:MonitoringController" as Controller
control "s:MonitoringService" as Service
database "Database" as DB
control "ExamHub" as Hub
control "LogService" as Log

== Re-Assign Exam ==

Client -> Controller: POST /re-assign-exam (ReAssignExam)
activate Controller

alt User not authenticated
    Controller -> Controller: Log unauthorized access attempt
    Controller --> Client: 401 Unauthorized { success: false, message: "User not authenticated." }
    deactivate Controller
else User authenticated
    Controller -> Service: ReAssignStudent(assignStudent, usertoken)
    activate Service

    Service -> DB: Check user role and permissions (UserId, RoleId)
    activate DB
    alt User is not allowed
        DB --> Service: Not found or invalid role
        deactivate DB
        Service -> Service: Log authorization failure
        Service --> Controller: "You do not have permission to re-assign student."
        deactivate Service
        Controller --> Client: 403 Forbidden { success: false, message }
        deactivate Controller
    else User is allowed
        DB --> Service: User role confirmed
        deactivate DB

        Service -> DB: Begin transaction
        activate DB
        DB --> Service: Transaction started
        deactivate DB

        Service -> DB: Get Exam (ExamId, Status != 0, StartTime <= now, EndTime >= now)
        activate DB
        alt Exam not found or not ongoing
            DB --> Service: Not found
            deactivate DB
            Service --> Controller: "Exam not found or not ongoing."
            deactivate Service
            Controller --> Client: 400 BadRequest { success: false, message }
            deactivate Controller
        else Exam found
            DB --> Service: Exam
            deactivate DB
            Service -> DB: Get StudentExam (ExamId, StudentId)
            activate DB
            alt StudentExam not found
                DB --> Service: Not found
                deactivate DB
                Service --> Controller: "Student ... has not joined the exam yet and cannot be reassigned."
                deactivate Service
                Controller --> Client: 400 BadRequest { success: false, message }
                deactivate Controller
            else StudentExam found
                DB --> Service: StudentExam
                deactivate DB
                Service -> DB: Get StudentAnswers (StudentExamId)
                activate DB
                DB --> Service: List<StudentAnswer>
                deactivate DB
                Service -> DB: RemoveRange StudentAnswers
                activate DB
                DB --> Service: Removed
                deactivate DB
                Service -> DB: Remove StudentExam
                activate DB
                DB --> Service: Removed
                deactivate DB
                Service -> DB: Get FaceCaptures (StudentExamId)
                activate DB
                DB --> Service: List<FaceCapture>
                deactivate DB
                Service -> DB: RemoveRange FaceCaptures
                activate DB
                DB --> Service: Removed
                deactivate DB
                Service -> DB: SaveChanges
                activate DB
                DB --> Service: Saved
                deactivate DB
                Service -> Log: WriteActivity(AddUserLogVM)
                activate Log
                Log --> Service: msg
                deactivate Log
                alt Log error
                    Service -> DB: Rollback transaction
                    activate DB
                    DB --> Service: Rolled back
                    deactivate DB
                    Service --> Controller: msg
                    deactivate Service
                    Controller --> Client: 400 BadRequest { success: false, message }
                    deactivate Controller
                else Log success
                    Service -> DB: Commit transaction
                    activate DB
                    DB --> Service: Committed
                    deactivate DB
                    Service -> Hub: SendAsync(RE_ASSIGN_EXAM, ...)
                    activate Hub
                    Hub --> Service: Sent
                    deactivate Hub
                    Service --> Controller: ""
                    deactivate Service
                    Controller --> Client: 200 OK { success: true, message }
                    deactivate Controller
                end alt
            end alt
        end alt
        alt Exception
            Service -> DB: Rollback transaction
            activate DB
            DB --> Service: Rolled back
            deactivate DB
            Service --> Controller: "Error during reassign: ..."
            deactivate Service
            Controller --> Client: 400 BadRequest { success: false, message }
            deactivate Controller
        end alt
    end alt
end alt

@enduml 