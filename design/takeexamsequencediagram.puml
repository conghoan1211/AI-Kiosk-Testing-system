@startuml

title Take Exam Sequence Diagram

actor "User" as Client
boundary "c:ExamController" as Controller
control "s:ExamService" as Service
database "Database" as DB

== Take Exam ==

Client -> Controller: GET /exam-detail-by-id/{examId}
activate Controller
Controller -> Service: GetExamDetail(examId)
activate Service

Service -> DB: Get Exam (examId)
activate DB
alt Exam not found
    DB --> Service: Not found
    deactivate DB
    Service --> Controller: ("Exam not found.", null)
    deactivate Service
    Controller --> Client: 400 BadRequest { success: false, message }
    deactivate Controller
else User not authenticated
    Service --> Controller: ("User not authenticated.", null)
    deactivate Service
    Controller --> Client: 401 Unauthorized { success: false, message }
    deactivate Controller
else User not authorized
    Service --> Controller: ("User not authorized to access this exam.", null)
    deactivate Service
    Controller --> Client: 403 Forbidden { success: false, message }
    deactivate Controller
else Exam found
    DB --> Service: Return Exam
    deactivate DB
    
    Service -> DB: Get ExamQuestions (examId, random, take exam.TotalQuestions)
    activate DB
    DB --> Service: List<ExamQuestion> (with Question)
    deactivate DB
    
    Service -> Service: Map to List<ExamQuestionVM> (randomize options)
    Service -> Service: Map to ExamDetailVM
    Service --> Controller: ("", ExamDetailVM)
    deactivate Service
    Controller --> Client: 200 OK { success: true, message, data }
    deactivate Controller
end alt

@enduml 